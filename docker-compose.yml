version: "3.7"

services:
  # 1) Métricas do host
  node-exporter:
    image: prom/node-exporter:latest
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --path.rootfs=/rootfs
    networks:
      - network_public
    deploy:
      mode: global

  # 2) Métricas de container
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    ports:
      - "8080:8080"
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    networks:
      - network_public
    deploy:
      mode: global

  # 3) Redis exporter
  redis-exporter:
    image: oliver006/redis_exporter:latest
    ports:
      - "9121:9121"
    environment:
      - REDIS_ADDR=redis://redis:6379
    networks:
      - network_public
    deploy:
      mode: global

  # 4) Process exporter (p/ Sidekiq)
  process-exporter:
    image: ncabatoff/process-exporter:latest
    ports:
      - "9256:9256"
    volumes:
      - /proc:/host/proc:ro
      - ./process-config.yml:/etc/process-exporter/config.yml:ro
    command:
      - --config.path=/etc/process-exporter/config.yml
    networks:
      - network_public
    deploy:
      mode: global

  # 5) Postgres
    # Postgres Exporter para Chatwoot
  postgres-exporter-chatwoot:
    image: wrouesnel/postgres_exporter:latest
    ports:
      - "9187:9187"
    environment:
      - DATA_SOURCE_NAME=postgresql://postgres:gGV3p1K24K2PwJ1f@postgres:5432/chatwoot?sslmode=disable
    networks:
      - network_public

  # Postgres Exporter para Evolution API
  postgres-exporter-evolution:
    image: wrouesnel/postgres_exporter:latest
    ports:
      - "9188:9188"
    environment:
      - DATA_SOURCE_NAME=postgresql://postgres:gGV3p1K24K2PwJ1f@postgres:5432/evolution?sslmode=disable
    networks:
      - network_public

  # 6) Prometheus
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.retention.time=30d
      - --storage.tsdb.retention.size=10GB
      - --web.external-url=https://monitor.automatto.net/prometheus
      - --web.route-prefix=/
    networks:
      - network_public
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`monitor.automatto.net`) && PathPrefix(`/prometheus`)"
      - "traefik.http.middlewares.prometheus-strip-prefix.stripprefix.prefixes=/prometheus"
      - "traefik.http.routers.prometheus.middlewares=prometheus-strip-prefix"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
      - "traefik.http.routers.prometheus.entrypoints=websecure"
      - "traefik.http.routers.prometheus.tls.certresolver=myresolver"

  # 7) Grafana
  grafana:
    image: grafana/grafana-oss:latest
    ports:
      - "3002:3002"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=XfvfRxPI442bl5Od
      - GF_SERVER_HTTP_PORT=3002
      - GF_SERVER_ROOT_URL=https://monitor.automatto.net/grafana
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - network_public
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3002/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`monitor.automatto.net`) && PathPrefix(`/grafana`)"
      - "traefik.http.middlewares.grafana-strip-prefix.stripprefix.prefixes=/grafana"
      - "traefik.http.routers.grafana.middlewares=grafana-strip-prefix"
      - "traefik.http.services.grafana.loadbalancer.server.port=3002"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls.certresolver=myresolver"

volumes:
  prometheus_data:
  grafana_data:

networks:
  network_public:
    external: true
    name: network_public
